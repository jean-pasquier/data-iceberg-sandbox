volumes:
  minio:
  lakekeeper-postgres:


services:

  ### Postgres to store lakekeeper data ###
  lakekeeper-db:
    image: postgres:17
    environment:
      - POSTGRES_DB=lakekeeper
      - POSTGRES_USER=lakekeeper-user
      - POSTGRES_PASSWORD=lakekeeper-pwd
    volumes:
      - lakekeeper-postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U lakekeeper-user -p 5432 -d lakekeeper" ]
      interval: 2s
      timeout: 10s
      retries: 2
      start_period: 10s


  ### MinIO as S3 LakeHouse storage (store data in iceberg format) ###
  minio:
    image: minio/minio:RELEASE.2025-07-23T15-54-02Z
    environment:
      - MINIO_ROOT_USER=minio-root-user
      - MINIO_ROOT_PASSWORD=minio-root-pwd
    command: [ "server", "--console-address", ":9001", "/data" ]
    volumes:
      - minio:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: [ "CMD", "mc", "ready", "local" ]
      interval: 2s
      timeout: 10s
      retries: 2
      start_period: 15s


  ### Job: create MinIO bucket ###
  init-minio:
    image: minio/minio:RELEASE.2025-07-23T15-54-02Z
    depends_on:
      minio:
        condition: service_healthy
    restart: on-failure
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc alias set dockerminio http://minio:9000 minio-root-user minio-root-pwd;
      /usr/bin/mc mb --ignore-existing dockerminio/poc-data-warehouse;
      exit 0;
      "

  ### Job: run lakekeeper SQL migration on postgres ###
  migrate:
    image: quay.io/lakekeeper/catalog:v0.10.3
    environment: &lakekeeper-env
      - LAKEKEEPER__PG_ENCRYPTION_KEY=This-is-NOT-Secure!
      - LAKEKEEPER__PG_DATABASE_URL_READ=postgresql://lakekeeper-user:lakekeeper-pwd@postgres:5432/lakekeeper
      - LAKEKEEPER__PG_DATABASE_URL_WRITE=postgresql://lakekeeper-user:lakekeeper-pwd@postgres:5432/lakekeeper
      - RUST_LOG=trace,axum=trace,sqlx=trace,lakekeeper=trace
    command: [ "migrate" ]
    restart: "no"
    depends_on:
      lakekeeper-db:
        condition: service_healthy


  ### Lakekeeper Iceberg REST catalog ###
  lakekeeper:
    image: quay.io/lakekeeper/catalog:v0.10.3
    environment: *lakekeeper-env
    command: [ "serve" ]
    ports:
      - "8181:8181"
    healthcheck:
      test: [ "CMD", "/home/nonroot/lakekeeper", "healthcheck" ]
      interval: 1s
      timeout: 10s
      retries: 3
      start_period: 3s
    depends_on:
      migrate:
        condition: service_completed_successfully
      lakekeeper-db:
        condition: service_healthy
      minio:
        condition: service_healthy
      init-minio:
        condition: service_completed_successfully


  ### Job: bootstrap lakekeeper ###
  bootstrap-lakekeeper:
    image: curlimages/curl
    depends_on:
      lakekeeper:
        condition: service_healthy
    restart: "no"
    command:
      - "-X"
      - "POST"
      - "-v"
      - "http://lakekeeper:8181/management/v1/bootstrap"
      - "-H"
      - "Content-Type: application/json"
      - "--data"
      - '{"accept-terms-of-use": true}'


  ### Job: create first 'warehouse' pointing to MinIO (see init-warehouse.json) ###
  init-warehouse:
    image: curlimages/curl
    command:
      - -w
      - "%{http_code}"
      - "-X"
      - "POST"
      - "-v"
      - "http://lakekeeper:8181/management/v1/warehouse"
      - "-H"
      - "Content-Type: application/json"
      - "--data"
      - "@create-init-warehouse.json"
      - "-o"
      - "/dev/null"
    volumes:
      - ./init-warehouse.json:/home/curl_user/create-init-warehouse.json
    depends_on:
      lakekeeper:
        condition: service_healthy
      init-minio:
        condition: service_completed_successfully
